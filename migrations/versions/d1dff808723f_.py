"""empty message

Revision ID: d1dff808723f
Revises: 
Create Date: 2019-06-03 12:01:18.844872

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd1dff808723f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('group_cod', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('group_cod')
    )
    op.create_table('knowledgeAreas',
    sa.Column('area_cod', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('area_cod')
    )
    op.create_index(op.f('ix_knowledgeAreas_name'), 'knowledgeAreas', ['name'], unique=True)
    op.create_table('teachers',
    sa.Column('DNI', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('surnames', sa.String(length=64), nullable=True),
    sa.Column('tutorial', sa.String(length=140), nullable=True),
    sa.Column('potential_teaching', sa.String(length=64), nullable=True),
    sa.Column('preassigned_hours', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('DNI')
    )
    op.create_table('universityDegrees',
    sa.Column('university_degree_cod', sa.Integer(), nullable=False),
    sa.Column('acronym', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('study_center', sa.String(length=64), nullable=True),
    sa.Column('plan_cod', sa.String(length=64), nullable=True),
    sa.Column('special_cod', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('university_degree_cod')
    )
    op.create_index(op.f('ix_universityDegrees_acronym'), 'universityDegrees', ['acronym'], unique=True)
    op.create_index(op.f('ix_universityDegrees_name'), 'universityDegrees', ['name'], unique=True)
    op.create_table('subjects',
    sa.Column('subject_cod', sa.Integer(), nullable=False),
    sa.Column('university_degree_code', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('course', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['university_degree_code'], ['universityDegrees.university_degree_cod'], ),
    sa.PrimaryKeyConstraint('subject_cod')
    )
    op.create_table('Have',
    sa.Column('subject_cod', sa.Integer(), nullable=True),
    sa.Column('area_cod', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['area_cod'], ['knowledgeAreas.area_cod'], ),
    sa.ForeignKeyConstraint(['subject_cod'], ['subjects.subject_cod'], )
    )
    op.create_table('PDA',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_cod', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('observations', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['subject_cod'], ['subjects.subject_cod'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subject_cod')
    )
    op.create_table('assigned',
    sa.Column('group_cod', sa.Integer(), nullable=False),
    sa.Column('subject_cod', sa.Integer(), nullable=False),
    sa.Column('number_hours', sa.Integer(), nullable=True),
    sa.Column('study_hours', sa.String(length=140), nullable=True),
    sa.ForeignKeyConstraint(['group_cod'], ['groups.group_cod'], ),
    sa.ForeignKeyConstraint(['subject_cod'], ['subjects.subject_cod'], ),
    sa.PrimaryKeyConstraint('group_cod', 'subject_cod')
    )
    op.create_table('give',
    sa.Column('DNI', sa.String(length=64), nullable=False),
    sa.Column('group_cod', sa.Integer(), nullable=False),
    sa.Column('subject_cod', sa.Integer(), nullable=False),
    sa.Column('coor_asignatura', sa.Boolean(), nullable=True),
    sa.Column('respon_practica', sa.Boolean(), nullable=True),
    sa.Column('venia', sa.Boolean(), nullable=True),
    sa.Column('confirmado', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['DNI'], ['teachers.DNI'], ),
    sa.ForeignKeyConstraint(['group_cod', 'subject_cod'], ['assigned.group_cod', 'assigned.subject_cod'], ),
    sa.PrimaryKeyConstraint('DNI', 'group_cod', 'subject_cod')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('give')
    op.drop_table('assigned')
    op.drop_table('PDA')
    op.drop_table('Have')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_universityDegrees_name'), table_name='universityDegrees')
    op.drop_index(op.f('ix_universityDegrees_acronym'), table_name='universityDegrees')
    op.drop_table('universityDegrees')
    op.drop_table('teachers')
    op.drop_index(op.f('ix_knowledgeAreas_name'), table_name='knowledgeAreas')
    op.drop_table('knowledgeAreas')
    op.drop_table('groups')
    # ### end Alembic commands ###
